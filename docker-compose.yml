version: '3.8'

services:
  # Base de datos MySQL
  mysql-db:
    image: mysql:8.0
    container_name: notes-mysql
    restart: always
    environment:
      MYSQL_DATABASE: notes_db
      MYSQL_USER: notes_user
      MYSQL_PASSWORD: notes_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - notes-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API (Spring Boot)
  backend-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: notes-backend
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/notes_db
      SPRING_DATASOURCE_USERNAME: notes_user
      SPRING_DATASOURCE_PASSWORD: notes_password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
    ports:
      - "8080:8080"
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - notes-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      timeout: 10s
      retries: 5

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: notes-frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend-api
    networks:
      - notes-network

  # Proxy inverso Nginx
  nginx-proxy:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: notes-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend-api
      - frontend
    networks:
      - notes-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

networks:
  notes-network:
    driver: bridge

volumes:
  mysql_data: